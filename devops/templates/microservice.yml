parameters:
  - name: agentPool
    type: string
  - name: helmChartPath
    type: string
  - name: deployBuild
    type: object
    default: []

stages:
  - stage: Prepare
    displayName: Prepare
    jobs:
      - job: Checks
        displayName: Checks
        workspace:
          clean: all
        steps:
          - script: |
              echo "Parameters"
              echo "agentPool     == '${{ convertToJson(parameters.agentPool) }}'"
              echo "helmChartPath == '${{ convertToJson(parameters.helmChartPath) }}'"
              echo "deployBuild   == '${{ convertToJson(parameters.deployBuild) }}'"
            displayName: Display Available Inputs
  - ${{ each deployB in parameters.deployBuild }}:
      - stage: ${{ deployB.stageName }}
        displayName: ${{ deployB.displayName }}
        pool: ${{ parameters.agentPool }}
        jobs:
          - job: Deploy
            displayName: Deploy ${{ deployB.stageName }}
            workspace:
              clean: all
            steps:
              - task: KubectlInstaller@0
              - task: HelmInstaller@1
              - task: HelmDeploy@0
                displayName: Package Helm Manifest
                inputs:
                  command: package
                  chartType: FilePath
                  chartPath: ${{ parameters.helmChartPath }}
                  chartVersion: 0.1.0
                  destination: $(Build.ArtifactStagingDirectory)
                  save: false
              - task: AzureCLI@2
                displayName: get DNSZONE
                inputs:
                  azureSubscription: AzureRM
                  scriptType: bash
                  scriptLocation: inlineScript
                  inlineScript: |
                    export DNSZONE=$(az aks show --resource-group ${{ deployB.ressourceGroup }} --name ${{ deployB.aksCluster }} --query addonProfiles.httpApplicationRouting.config.HTTPApplicationRoutingZoneName -o json | jq -r)
                    echo "##vso[task.setvariable variable=dnszone]${DNSZONE"}
              - task: HelmDeploy@0
                displayName: Deploy Helm Manifest
                inputs:
                  connectionType: Azure Resource Manager
                  azureSubscription: ${{ dpeloyB.azureServiceConnection }}
                  azureResourceGroup: ${{ deployB.resourceGroup }}
                  kubernetesCluster: ${{ deployB.aksName }}
                  useClusterAdmin: true
                  command: upgrade
                  install: true
                  releaseName: ${{ deployB.aksCluster }}-${{ deployB.stageName }}
                  chartType: FilePath
                  chartPath: $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartPath }}-0.1.0.tgz
                  arguments: -f deployment/values-${{ deployB.stageName }}.yml -f deployment/values-common.yml
                  overrideValues: cluster.dnszone=$(dnszone)
                  save: false
